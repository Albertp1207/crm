{"version":3,"sources":["styles/images/logo32.png","components/menu/index.js","myRedux/actions/editContactAction.js","components/wrapper/contacts/contactsList/ContactsListRow.js","components/wrapper/contacts/contactsListMenu/button/Button.js","myRedux/actions/openPopupsAction.js","myRedux/actions/sendEmailPopupActions/sendEmailPopupActions.js","components/wrapper/contacts/contactsListMenu/index.js","tools/fetch.js","myRedux/actions/contactsListFetchAction.js","reusableComponents/waitAnimation.js","components/wrapper/contacts/index.js","myRedux/actions/mailingListActions/mailingListFetchActions.js","myRedux/actions/submitPopupActions/submitPopupActions.js","components/wrapper/mailingList/lists/index.js","myRedux/actions/tickActions/tickContactsML.js","components/wrapper/mailingList/list/listRow/index.js","myRedux/actions/MLContactsActions/MLContactsFetchActions.js","components/wrapper/mailingList/list/index.js","tools/addOrDeleteContactsFromML.js","components/wrapper/mailingList/menu/index.js","components/wrapper/mailingList/index.js","components/wrapper/index.js","tools/validation.js","reusableComponents/AddContactPopup.js","reusableComponents/DeletingPopup.js","reusableComponents/EditingContactPopup.js","reusableComponents/CreateMailingList.js","reusableComponents/indicator.js","reusableComponents/SubmitPopup.js","reusableComponents/AddToExistingListPopup.js","myRedux/actions/templatesActions/getTemplatesAction.js","myRedux/actions/indicatorActions/indicatorAction.js","reusableComponents/emailSendPopup.js","reusableComponents/UploadFilePopup.js","components/index.js","myRedux/redusers/sendEmailPopupReducer.js","myRedux/redusers/contactsListReduser.js","myRedux/redusers/mailingListsReducer.js","myRedux/redusers/openPopupsReduser.js","myRedux/redusers/templatesReducer.js","myRedux/redusers/editContactReducer.js","myRedux/redusers/tickContactsReducer.js","myRedux/redusers/MLContactsReducer.js","myRedux/redusers/indicatorReducer.js","myRedux/redusers/submitPopupReducer.js","myRedux/redusers/rootReduser.js","index.js"],"names":["module","exports","__webpack_require__","p","Menu","activeStyle","pointerEvents","cursor","color","react_default","a","createElement","id","className","title","react_router_dom","this","to","index_esm","io_index_esm","Component","ADD_EDITING_CONTACT_OPEN_POPUP","CANCEL_EDITING_CONTACT_CLOSE_POPUP","addEditingContactOpenPopup","contact","type","cancelEditingContactClosePopup","ContatsListRow","chooseContact","editingContact","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","_this","props","contacts","lists","Symbol","iterator","next","done","value","GuID","iconButId","err","return","_this2","_this$props","person","colback","checked","onChange","htmlFor","ref","e","onClick","connect","state","contactsList","dispatch","bindActionCreators","Button","name","disable","openPopup","icon","disabled","OPEN_CREATING_EMAIL_LIST_POPUP","OPEN_ADD_TO_EXISTING_LIST_POPUP","OPEN_ADD_NEW_CONTACT_POPUP","OPEN_UPLOAD_FILE_POPUP","OPEN_DELETING_POPUP","CLOSE_POPUPS","openCreatingEmailListPopup","openAddToExistingListPopup","openAddNewContactPopup","openUploadFilePopup","openDeletingPopup","closePopups","OPEN_SEND_EMAIL_POPUP","CLOSE_SEND_EMAIL_POPUP","openSendEmailPopup","GuIDArr","mailingListId","payload","ContactsListMenu","openSendEmail","collectionSelected","buttonsNotActive","fi_index_esm","md_index_esm","tools_fetch","url","method","data","URL","fetch","then","verifyError","json","headers","Accept","Content-Type","body","JSON","stringify","res","ok","statusText","Error","GET_CONTACTS_LIST_BEGIN","GET_CONTACTS_LIST_SUCCESS","GET_CONTACTS_LIST_FAIL","ADD_SELECTED_CONTACTS_ACTIVATION_BUTTONS","SELECT_ALL","CANCEL_SELECTED","getContactsList","myFetch","catch","error","getContactsListFail","addSelectedContacts","guId","selectAll","cancelSelected","waitAnimation","ContactsList","componentDidMount","getSelectedContacts","target","chooseAll","_this$props$contacts","loading","selectedContacts","message","react","map","item","ContactsListRow","key","contactsListMenu","GET_MAILLING_LISTS_BEGIN","GET_MAILLING_LISTS_SUCCESS","GET_MAILLING_LISTS_FAIL","getMailingLists","getMailingListsFail","OPEN_SUBMIT_POPUP","CLOSE_SUBMIT_POPUP","openSubmitPopup","callback","link","Lists","makeList","el","EmailListID","listid","EmailListName","ev","deleteEmailList","length","mailingLists","ticks","tickContacts","console","log","f","TICK_CONTACT","CLEAR_TICKS","PUT_ID","listRow","tickContact","guiid","GET_CONTACTS_FOR_ML","GET_CONTACTS_FOR_ML_SUCCESS","GET_CONTACTS_FOR_ML_FAIL","PUT_ML_GUID","getContactsForML","guID","putGuID","concat","list","getContactsForMLFail","List","list_listRow","match","params","clearTicks","putID","prevProps","MLContacts","addOrDeleteContactsFromML","doAdd","ml","deleteContactsFromML","MLID","isActive","guIDArr","MailingList","mailingList_lists","react_router","path","component","mailingList_menu","isOpenSendEmailPopup","sendEmailPopup","isOpen","Wrapper","render","exact","regExp","fullName","companyName","position","country","email","emailListName","validation","getAttribute","test","AddContactPopup","wait","contactData","FullName","CompanyName","Position","Country","Email","validAllData","createContact","nextSibling","innerHTML","style","borderBottom","sendContact","Object","values","every","val","setState","status","document","getElementsByName","cancel","onBlur","DeletingPopup","deleteContacts","cancelDeleting","EditingContactPopup","changes","editingContactPopup","changeContact","objectSpread","editContact","defaultValue","CreateMailingList","createListName","createMailingList","mailingList","Contacts","cancelCreating","indicator","specClass","text","submitPopup","closeSubmitPopup","args","AddToExistingList","selID","handleChange","event","addToExistingList","selectID","Number","forEach","element","canceladdToExistingListPopup","_this$props$mailingLi","GET_TEMPLATES_BEGIN","GET_TEMPLATES_SUCCESS","GET_TEMPLATES_FAIL","getTemplates","templates","getTemplatesFail","OPEN_INDICATOR","CLOSE_INDICATOR","SET_CONTENT_INDICATOR","closeIndicatorAsync","content","setContentIndicator","setTimeout","emailSendPopup","choosedTemplate","makeUrl","templateId","selectTemplate","makeTemaplesList","TemplateId","teminmp","TemplateName","send","closePopup","openIndicator","_this$props$templates","classes","st","UploadFilePopup","file","onFormSubmit","preventDefault","fileUpload","response","files","formData","FormData","append","Content-type","onSubmit","App","_this$props$openPopup","openPopups","creatingEmailListPopupIsOpen","addToExistingListIsOpen","addNewContactIsOpen","uploadFileIsOpen","deletingPopupIsOpen","editPopupIsOpen","_this$props$indicator","isOpenIndicator","src","logo","alt","menu","wrapper","reusableComponents_AddContactPopup","reusableComponents_UploadFilePopup","reusableComponents_CreateMailingList","AddToExistingListPopup","reusableComponents_DeletingPopup","reusableComponents_EditingContactPopup","reusableComponents_SubmitPopup","reusableComponents_emailSendPopup","initState","editingContactPopupReducer","arguments","action","initialState","rootReducer","combineReducers","_action$payload","guIds","collectionSel","selectAllCopy","buttonsNotActiveCopy","push","selectedCon","keys","updatingContactPopup","copyArr","slice","i","indexOf","splice","store","createStore","rootReduser","applyMiddleware","thunk","ReactDOM","es","components","getElementById"],"mappings":"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","file":"static/js/main.5bac1d64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo32.27f6a149.png\";","import React,{Component} from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { FaUsers } from \"react-icons/fa\";\r\nimport { IoIosSend } from \"react-icons/io\";\r\n// variable in module or in class ?\r\nclass Menu extends Component{\r\n    activeStyle = {\r\n            pointerEvents: \"none\",\r\n            cursor: \"default\",\r\n            color: \"grey\"     \r\n    }\r\n    render(){\r\n        return (\r\n            <div id=\"mainMenu\">\r\n                <div className = 'itemMenu contactsMenu' title = 'Contacts'>\r\n                    <NavLink activeStyle={this.activeStyle} to=\"/contacts\">\r\n                        <FaUsers />\r\n                    </NavLink>                    \r\n                </div>\r\n                <div className = 'itemMenu mailingList' title = 'Mailing List'>\r\n                    <NavLink activeStyle={this.activeStyle} to=\"/mailinglist\">\r\n                        <IoIosSend /> \r\n                    </NavLink>                    \r\n                </div>\r\n                 \r\n                \r\n            </div>\r\n        )\r\n    }\r\n        \r\n}\r\n\r\nexport default Menu;","export const ADD_EDITING_CONTACT_OPEN_POPUP = 'ADD_EDITING_CONTACT_OPEN_POPUP';\r\nexport const CANCEL_EDITING_CONTACT_CLOSE_POPUP = 'CANCEL_EDITING_CONTACT_CLOSE_POPUP';\r\n\r\n\r\nexport const addEditingContactOpenPopup = (contact) => ({\r\n    type: ADD_EDITING_CONTACT_OPEN_POPUP,\r\n    contact\r\n})\r\n\r\nexport const cancelEditingContactClosePopup = () => ({\r\n    type: CANCEL_EDITING_CONTACT_CLOSE_POPUP\r\n})","import React, { Component } from 'react';\r\nimport { FaUserEdit } from \"react-icons/fa\";\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { addEditingContactOpenPopup } from '../../../../myRedux/actions/editContactAction';\r\n\r\nclass ContatsListRow extends Component{\r\n\r\n    chooseContact = () => {\r\n        let editingContact = '';\r\n        \r\n        for (let value of this.props.contacts.lists) {\r\n            if (value.GuID === this.iconButId) {\r\n                editingContact = value;\r\n                break;\r\n            }\r\n        }\r\n        this.props.addEditingContactOpenPopup(editingContact);\r\n        // console.log(updatingContact);\r\n    }\r\n    \r\n    render () {\r\n        const { person, colback, checked } = this.props;\r\n        return (\r\n            <div className = 'contactsListRow'>\r\n                <div>\r\n                    <input type = 'checkbox' onChange = { colback } value = {person.GuID} checked = { checked } id={person.GuID}/>\r\n                    <label htmlFor={person.GuID}></label>\r\n                </div>\r\n                <div>{ person['Full Name'] }</div>\r\n                <div>{ person['Company Name'] }</div>\r\n                <div>{ person['Position'] }</div>\r\n                <div>{ person['Country'] }</div>\r\n                <div>{ person['Email'] }</div>\r\n                <div className = 'iconBut' ref = {e => this.iconButId = person.GuID} onClick = {this.chooseContact}><FaUserEdit /></div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contactsList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        { \r\n            addEditingContactOpenPopup\r\n        },\r\n        dispatch\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContatsListRow);\r\n","import React from \"react\";\r\n\r\nexport default (props) => {\r\n    \r\n    const { name, disable, openPopup, icon } = props;\r\n    return (\r\n        <button className ='buttons'  onClick = { openPopup } disabled = { disable }>\r\n            <span className = 'butIcons'>{icon}</span>\r\n            <span className = 'butName'>{ name }</span>\r\n        </button>\r\n    );\r\n}","export const OPEN_CREATING_EMAIL_LIST_POPUP = 'OPEN_CREATING_EMAIL_LIST_POPUP';\r\nexport const OPEN_ADD_TO_EXISTING_LIST_POPUP = 'OPEN_ADD_TO_EXISTING_LIST_POPUP';\r\nexport const OPEN_ADD_NEW_CONTACT_POPUP = 'OPEN_ADD_NEW_CONTACT_POPUP';\r\nexport const OPEN_UPLOAD_FILE_POPUP = 'OPEN_UPLOAD_FILE_POPUP';\r\nexport const OPEN_DELETING_POPUP = 'OPEN_DELETING_POPUP';\r\nexport const CLOSE_POPUPS = 'CLOSE_POPUPS';\r\n\r\n\r\nexport const openCreatingEmailListPopup = () => ({\r\n    type: OPEN_CREATING_EMAIL_LIST_POPUP\r\n})\r\n\r\nexport const openAddToExistingListPopup = () => ({\r\n    type: OPEN_ADD_TO_EXISTING_LIST_POPUP\r\n})\r\n\r\nexport const openAddNewContactPopup = () => ({\r\n    type: OPEN_ADD_NEW_CONTACT_POPUP\r\n})\r\n\r\nexport const openUploadFilePopup = () => ({\r\n    type: OPEN_UPLOAD_FILE_POPUP\r\n})\r\n\r\nexport const openDeletingPopup = () => ({\r\n    type: OPEN_DELETING_POPUP\r\n})\r\n\r\nexport const closePopups = () => ({\r\n    type: CLOSE_POPUPS\r\n})","export const OPEN_SEND_EMAIL_POPUP = \"OPEN_SEND_EMAIL_POPUP\";\r\nexport const CLOSE_SEND_EMAIL_POPUP = \"CLOSE_SEND_EMAIL_POPUP\";\r\n\r\n\r\nexport const openSendEmailPopup = (GuIDArr,mailingListId) => ({\r\n    type: OPEN_SEND_EMAIL_POPUP,\r\n    payload:{GuIDArr,mailingListId}\r\n})\r\nexport const closeSendEmailPopup = () => ({\r\n    type: CLOSE_SEND_EMAIL_POPUP\r\n})\r\n","import React, { Component} from 'react';\r\n// import ButtonLink from './button/ButtonLink';\r\nimport Button from './button/Button';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { openCreatingEmailListPopup,\r\n        openAddToExistingListPopup,\r\n        openAddNewContactPopup,\r\n        openUploadFilePopup, \r\n        openDeletingPopup \r\n        } from '../../../../myRedux/actions/openPopupsAction';\r\nimport { openSendEmailPopup } from '../../../../myRedux/actions/sendEmailPopupActions/sendEmailPopupActions';\r\nimport { IoIosSend, IoMdCreate, IoMdAdd, IoMdPersonAdd } from \"react-icons/io\";\r\n// import { FaFileUpload, FaTrashAlt } from \"react-icons/fa\";\r\nimport { MdClear } from \"react-icons/md\";\r\nimport { FiUpload } from \"react-icons/fi\";\r\n\r\n\r\n\r\nclass ContactsListMenu extends Component{\r\n    openSendEmail = () =>{\r\n        this.props.openSendEmailPopup(this.props.contacts.collectionSelected)\r\n    } \r\n\r\n    render() {\r\n        const { buttonsNotActive } = this.props.contacts;\r\n        return (\r\n            <div className = 'buttonsContainer'>\r\n                <Button name = 'Send Email' openPopup = { this.openSendEmail } disable = { buttonsNotActive } icon = {<IoIosSend />} />\r\n                <Button name = 'Create Mailing List' openPopup = { this.props.openCreatingEmailListPopup } disable = { buttonsNotActive } icon = {<IoMdCreate />} />\r\n                <Button name = 'Add to Existing List' openPopup = { this.props.openAddToExistingListPopup } disable = { buttonsNotActive } icon = {<IoMdAdd />}/>\r\n                <Button name = 'Add New Contact' openPopup = { this.props.openAddNewContactPopup }  icon = {<IoMdPersonAdd />} />\r\n                <Button name = 'Upload File' openPopup = { this.props.openUploadFilePopup }  icon = {<FiUpload />} />\r\n                <Button name = 'Delete Contact' openPopup = { this.props.openDeletingPopup } disable = { buttonsNotActive } icon = {<MdClear />} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contactsList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        { \r\n            openSendEmailPopup,\r\n            openCreatingEmailListPopup,\r\n            openAddToExistingListPopup,\r\n            openAddNewContactPopup,\r\n            openUploadFilePopup,\r\n            openDeletingPopup\r\n        },\r\n        dispatch\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsListMenu);","const _URL = \"http://visual.istclabz.com:2112/api\";\r\nexport default (url,method,data) => {\r\n    const URL = _URL + url\r\n    // console.log(URL)\r\n    if( method === \"GET\") {\r\n        // console.log(\"Asdas\")\r\n        return fetch(URL)\r\n            .then(verifyError)\r\n            .then(data=>data.json())\r\n    } else {\r\n        return fetch(URL,{\r\n            method,\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then(verifyError)\r\n        // then ... error to json ...\r\n    }\r\n}\r\n\r\nfunction verifyError(res){\r\n    if(!res.ok && res.statusText) {\r\n        throw Error(res.statusText)\r\n    }\r\n    return res\r\n}\r\n\r\n// true post !!!\r\n// fetch(\"http://visual.istclabz.com:2112/api/emaillists/update?id=2&flag=true\", {\r\n//     credentials: 'same-origin', \r\n//     method: 'PUT', \r\n//     body: JSON.stringify([\"d1e4061d-64cf-404c-bb78-b47449e4103b\"]), \r\n//     headers: new Headers({\r\n//       'Content-Type': 'application/json'\r\n//     }),\r\n//   })\r\n//   .then(response => response.json())\r\n// \t.then(a=>console.log(a))","import myFetch from \"../../tools/fetch\";\r\n\r\nexport const GET_CONTACTS_LIST_BEGIN = \"GET_CONTACTS_LIST_BEGIN\";\r\nexport const GET_CONTACTS_LIST_SUCCESS = \"GET_CONTACTS_LIST_SUCCESS\";\r\nexport const GET_CONTACTS_LIST_FAIL = \"GET_CONTACTS_LIST_FAIL\";\r\nexport const ADD_SELECTED_CONTACTS_ACTIVATION_BUTTONS = 'ADD_SELECTED_CONTACTS_ACTIVATION_BUTTONS';\r\nexport const SELECT_ALL = 'SELECT_ALL';\r\nexport const CANCEL_SELECTED = 'CANCEL_SELECTED';\r\n\r\nexport const getContactsListBegin = () => ({\r\n    type: GET_CONTACTS_LIST_BEGIN\r\n})\r\nexport const getContactsListSuccess = lists => ({\r\n    type: GET_CONTACTS_LIST_SUCCESS,\r\n    payload: {lists}\r\n})\r\nexport const getContactsListFail = error => ({\r\n    type: GET_CONTACTS_LIST_FAIL,\r\n    payload: {error}\r\n})\r\n\r\n\r\nexport const getContactsList = () => {\r\n    return dispatch => {\r\n        dispatch(getContactsListBegin());\r\n        return myFetch(\"/contacts\",\"GET\")\r\n            .then(data => {\r\n                // console.log(data)\r\n                dispatch(getContactsListSuccess(data))\r\n            })\r\n            .catch(error => dispatch(getContactsListFail(error)));\r\n    };\r\n}\r\n\r\n\r\n// add selected contacts\r\n\r\nexport const addSelectedContacts = (guId) => ({\r\n        type: ADD_SELECTED_CONTACTS_ACTIVATION_BUTTONS,\r\n        guId\r\n})\r\n\r\nexport const selectAll = () => ({\r\n    type: SELECT_ALL\r\n})\r\n\r\nexport const cancelSelected = () => ({\r\n    type: CANCEL_SELECTED\r\n})\r\n\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n    return (\r\n        <div id = 'waitContainer'>\r\n            <div id = 'waitWrapper'>\r\n                <div className = 'waitItem waitItem_1'>\r\n                    <div></div>\r\n                </div>\r\n                <div className = 'waitItem waitItem_2'>\r\n                    <div></div>\r\n                </div>\r\n                <div className = 'waitItem waitItem_3'>\r\n                    <div></div>\r\n                </div>\r\n                <div className = 'waitItem waitItem_4'>\r\n                    <div></div>\r\n                </div>\r\n                <div className = 'waitItem waitItem_5'>\r\n                    <div></div>\r\n                </div>\r\n                <div className = 'waitItem waitItem_6'>\r\n                    <div></div>\r\n                </div>\r\n                <div className = 'waitItem waitItem_7'>\r\n                    <div></div>\r\n                </div>\r\n                <div className = 'waitItem waitItem_8'>\r\n                    <div></div>\r\n                </div>\r\n                <div className = 'waitItem waitItem_9'>\r\n                    <div></div>\r\n                </div>\r\n                <div className = 'waitItem waitItem_10'>\r\n                    <div></div>\r\n                </div>\r\n                <div className = 'waitItem waitItem_11'>\r\n                    <div></div>\r\n                </div>\r\n                <div className = 'waitItem waitItem_12'>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { Component, Fragment } from 'react';\r\nimport ContactsListRow from './contactsList/ContactsListRow';\r\nimport ContactsListMenu from './contactsListMenu';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { getContactsList, addSelectedContacts, selectAll } from '../../../myRedux/actions/contactsListFetchAction';\r\nimport WaitAnimation from '../../../reusableComponents/waitAnimation';\r\n\r\nclass ContactsList extends Component{\r\n    \r\n    componentDidMount = () => {\r\n        this.props.getContactsList();\r\n        \r\n    }\r\n\r\n    getSelectedContacts = (e) => {\r\n        this.props.addSelectedContacts( e.target.value );\r\n\r\n    }\r\n\r\n    chooseAll = () => {\r\n        // console.log(11);\r\n        this.props.selectAll()\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props.contacts);\r\n        const { lists, loading, error, selectedContacts, selectAll } = this.props.contacts;\r\n\r\n        if(error) {\r\n            return <div>ERROR --- {error.message}</div>\r\n        }\r\n\r\n        if(loading) {\r\n            return <WaitAnimation />\r\n        }\r\n        return (\r\n            <Fragment>\r\n                <div className = 'contactsListTable'>\r\n                    <div className = 'contactsListHead'>\r\n                        <div className = 'contactsListRow'>\r\n                            <div>\r\n                                <input type = 'checkbox' onChange = { this.chooseAll } checked = { selectAll } id = 'all'/>\r\n                                <label htmlFor=\"all\"></label>\r\n                            </div>\r\n                            <div>Full Name</div>\r\n                            <div>Company Name</div>\r\n                            <div>Position</div>\r\n                            <div>Country</div>\r\n                            <div>Email</div>\r\n                            <div className = 'iconButHead'>Edit</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className = 'contactsListBody'>\r\n                        { lists.map( item => <ContactsListRow \r\n                                                person = { item } \r\n                                                colback = { this.getSelectedContacts }\r\n                                                checked = { selectedContacts[item.GuID] }\r\n                                                key = { item.GuID } /> \r\n                                                )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <ContactsListMenu />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contactsList\r\n        \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        { \r\n            getContactsList,\r\n            addSelectedContacts,\r\n            selectAll\r\n        },\r\n        dispatch\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);","import myFetch from \"../../../tools/fetch\";\r\n\r\nexport const GET_MAILLING_LISTS_BEGIN = \"GET_MAILLING_LISTS_BEGIN\"\r\nexport const GET_MAILLING_LISTS_SUCCESS = \"GET_MAILLING_LISTS_SUCCESS\"\r\nexport const GET_MAILLING_LISTS_FAIL = \"GET_MAILLING_LISTS_FAIL\"\r\n\r\nexport const getMailingListsBegin = () => ({\r\n    type: GET_MAILLING_LISTS_BEGIN\r\n})\r\nexport const getMailingListsSuccess = lists => ({\r\n    type: GET_MAILLING_LISTS_SUCCESS,\r\n    payload: {lists}\r\n})\r\nexport const getMailingListsFail = error => ({\r\n    type: GET_MAILLING_LISTS_FAIL,\r\n    payload: {error}\r\n})\r\n\r\nexport const getMailingLists = () => {\r\n    // console.log(\"ASD_AS_D-\")\r\n    return dispatch => {\r\n        dispatch(getMailingListsBegin());\r\n        // console.log(\"STTSTTs\")\r\n        return myFetch(\"/emaillists\",\"GET\")\r\n            .then(data => {\r\n                // console.log(data)\r\n                dispatch(getMailingListsSuccess(data))\r\n            })\r\n            .catch(error => dispatch(getMailingListsFail(error)));\r\n    };\r\n}\r\n\r\n\r\nexport const deleteEmailList = (id) => {\r\n    return dispatch => {\r\n        // why return fetch ?\r\n        return myFetch(\"/emaillists?id=\"+id,\"DELETE\")\r\n            .then(res=>{\r\n                    dispatch(getMailingLists()) // ?\r\n                    return res\r\n            })\r\n            .catch(err=>console.log(err))\r\n    }\r\n        \r\n}\r\n// promise-i mej return aneluc anpayman promise ????\r\n\r\n// error..tate update on an unmounted component. This is a no-op\r\n//, but it indicates a memory leak in your application.\r\n// To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.\r\n// console...","export const OPEN_SUBMIT_POPUP = \"OPEN_SUBMIT_POPUP\";\r\nexport const CLOSE_SUBMIT_POPUP = \"CLOSE_SUBMIT_POPUP\";\r\nexport const DO_CALLBACK = \"DO_CALLBACK\"\r\n\r\n\r\nexport const openSubmitPopup = (callback,link) => ({\r\n    type: OPEN_SUBMIT_POPUP,\r\n    payload: {callback,link}\r\n})\r\nexport const closeSubmitPopup = () => ({\r\n    type: CLOSE_SUBMIT_POPUP\r\n})\r\nexport const doCallback = () => ({\r\n    type:DO_CALLBACK\r\n})","import React,{Component} from \"react\";\r\nimport {NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {getMailingLists,deleteEmailList} from \"../../../../myRedux/actions/mailingListActions/mailingListFetchActions\";\r\nimport {openSendEmailPopup} from \"../../../../myRedux/actions/sendEmailPopupActions/sendEmailPopupActions\"\r\nimport {openSubmitPopup} from \"../../../../myRedux/actions/submitPopupActions/submitPopupActions\"\r\nimport { IoIosSend } from \"react-icons/io\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport Wait from \"../../../../reusableComponents/waitAnimation\";\r\nclass Lists extends Component{\r\n    componentDidMount() {\r\n        this.props.getMailingLists()\r\n        ;\r\n    } \r\n\r\n    makeList = (lists) => {\r\n        return lists.map(el=>{\r\n            return (\r\n                <li key={el.EmailListID} listid={el.EmailListID}>\r\n                    <NavLink className = \"mlName\" to={\"/mailinglist/\"+el.EmailListID} activeStyle={{\r\n                        pointerEvents: \"none\",\r\n                        cursor: \"default\",\r\n                        color: \"grey\"\r\n                    }}>{el.EmailListName}</NavLink>\r\n                    <label  className = \"sendML\"  onClick = {()=>this.props.openSendEmailPopup(el.EmailListID)} listid = {el.EmailListID} ><IoIosSend /></label>\r\n                    \r\n                    <label className =\"deleteML\" onClick={(ev)=>this.props.openSubmitPopup(()=>this.props.deleteEmailList(el.EmailListID))} listid = {el.EmailListID} ><MdDelete /></label>\r\n                    \r\n                </li>\r\n            )\r\n        })\r\n    }\r\n    render(){\r\n        let {error,lists,loading} = this.props;\r\n        // console.log(this.props)\r\n        if(error) {\r\n            return <div>ERROR --- {error.message}</div>\r\n        }\r\n\r\n        if( loading && lists.length === 0) {\r\n            return <Wait />\r\n        }\r\n\r\n        \r\n        return(\r\n            <div className=\"lists\">\r\n                <ul>\r\n                    {this.makeList(lists)}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    lists: state.mailingLists.lists,\r\n    loading: state.mailingLists.loading,\r\n    error: state.mailingLists.error,\r\n    ticks: state.tickContacts\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getMailingLists: ()=>{\r\n            dispatch(getMailingLists())\r\n        },\r\n        openSendEmailPopup:id=>{\r\n                    dispatch(openSendEmailPopup(null,id))\r\n            \r\n        },// funkcia poxancum Listsin ...???\r\n        deleteEmailList: ev => {\r\n            dispatch(deleteEmailList(ev))\r\n        },\r\n        openSubmitPopup: f => {\r\n            dispatch(openSubmitPopup(f,\"/mailinglist\"))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Lists);\r\n\r\n//()=>()=>bind ??? askd aopsd \r\n\r\n // uxarkel container funcer@ ...\\/...\r\n // miajamanak state ev props poxvel@...\r\n//shouldc-i mej hamematel imast ka te reactna anum ...?","export const TICK_CONTACT = \"ADD_TICK\";\r\nexport const CLEAR_TICKS = \"CLEAR_TICKS\";\r\nexport const PUT_ID = \"PUT_ID\";\r\n\r\nexport const tickContact = id => ({\r\n    type: TICK_CONTACT,\r\n    payload:{id}\r\n});\r\nexport const clearTicks = () => ({\r\n    type: CLEAR_TICKS\r\n});\r\n\r\nexport const putID = name => ({\r\n    type:PUT_ID,\r\n    payload:{name}\r\n})\r\n\r\n","import React,{Component} from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport {tickContact} from \"../../../../../myRedux/actions/tickActions/tickContactsML\"\r\n\r\nclass listRow extends Component{\r\n    // constructor(props){\r\n    //     super(props);\r\n    // }\r\n\r\n    // bind doesn't work ???\r\n    render() {\r\n        const {person} = this.props;\r\n        return (\r\n            <div  className = 'contactsListRow'>                \r\n                <div>\r\n                    <input onClick ={()=>this.props.tickContact(person.GuID)}  guiid= {person.GuID} type = 'checkbox' id = {person.GuID}/>\r\n                    <label htmlFor={person.GuID}></label>\r\n                </div>\r\n                <div>{person['Full Name']}</div>\r\n                <div>{person['Company Name']}</div>\r\n                <div>{person['Position']}</div>\r\n                <div>{person['Country']}</div>\r\n                <div>{person['Email']}</div>\r\n                {/* <div><a href = '#'><FaUserEdit /></a></div> */}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        tickContact: id => dispatch(tickContact(id))\r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps)(listRow);\r\n\r\n// classi anun@ contact.., komponentin@ listRow... to AHo\r\n// Sync action blocking","import myFetch from \"../../../tools/fetch\";\r\n\r\nexport const GET_CONTACTS_FOR_ML = \"GET_CONTACTS_FOR_ML\";\r\nexport const GET_CONTACTS_FOR_ML_SUCCESS = \"GET_CONTACTS_FOR_ML_SUCCESS\";\r\nexport const GET_CONTACTS_FOR_ML_FAIL = \"GET_CONTACTS_FOR_ML_FAIL\";\r\nexport const PUT_ML_GUID =\"PUT_ML_GUID\"\r\n\r\nexport const getContactsForMLBegin = () => ({\r\n    type: GET_CONTACTS_FOR_ML\r\n})\r\nexport const getContactsForMLSuccess = list => ({\r\n    type: GET_CONTACTS_FOR_ML_SUCCESS,\r\n    payload: {list}\r\n})\r\nexport const getContactsForMLFail = error => ({\r\n    type: GET_CONTACTS_FOR_ML_FAIL,\r\n    payload: {error}\r\n})\r\n\r\nexport const putGuID = guID => ({\r\n    type:PUT_ML_GUID,\r\n    payload:{guID}\r\n})\r\n\r\n\r\nexport const getContactsForML = (guID) => {\r\n    // console.log(guID)\r\n    return dispatch => {\r\n        dispatch(getContactsForMLBegin());\r\n        dispatch(putGuID(guID))\r\n        return myFetch(`/emaillists?id=${guID}`,\"GET\")\r\n            .then(data => {\r\n                // console.log(data)\r\n                dispatch(getContactsForMLSuccess(data))\r\n            })\r\n            .catch(error => dispatch(getContactsForMLFail(error)));        \r\n    };\r\n}\r\n\r\n// promise-i mej return aneluc anpayman promise ????\r\n\r\n// error..tate update on an unmounted component. This is a no-op\r\n//, but it indicates a memory leak in your application.\r\n// To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.\r\n// console...\r\n\r\n\r\n\r\n\r\n// getData = () => {\r\n//     myFetch(\"/emaillists?id=\"+this.props.match.params.listid,\"GET\")\r\n//     .then(data=>{\r\n//         console.log(\"!!!!!!!!!!!!!!!!!!!!!!!!\")\r\n//         this.setState({\r\n//             list:data,\r\n//             error:null\r\n//         });\r\n//         this.props.putName(this.props.match.params.listid)\r\n\r\n//     })\r\n//     .catch(error=>{\r\n//         this.setState({\r\n//             error:error.message\r\n//         })\r\n//     })\r\n// }","import React,{Component} from \"react\";\r\nimport ListRow from \"./listRow\";\r\nimport {getContactsForML} from \"../../../../myRedux/actions/MLContactsActions/MLContactsFetchActions\"\r\nimport { connect } from \"react-redux\";\r\nimport {clearTicks,putID} from \"../../../../myRedux/actions/tickActions/tickContactsML\"\r\nimport WaitAnimation from '../../../../reusableComponents/waitAnimation';\r\nclass List extends Component{\r\n    componentDidMount(){\r\n        this.props.getContactsForML(this.props.match.params.listid)\r\n        this.props.clearTicks()\r\n\r\n        this.props.putID(this.props.match.params.listid)\r\n\r\n    }\r\n    //ERROR__\r\n    componentDidUpdate(prevProps){\r\n\r\n        if(this.props.match.params.listid !== prevProps.match.params.listid){            \r\n            this.props.getContactsForML(this.props.match.params.listid)\r\n            this.props.clearTicks()\r\n\r\n            this.props.putID(this.props.match.params.listid)\r\n            return true\r\n        };\r\n        return false\r\n    }\r\n    \r\n    componentWillUnmount(){\r\n        this.props.clearTicks()\r\n    }\r\n    makeList = list => {\r\n        if(list.length === 0) {\r\n            return <div>EMPTY !!!</div>\r\n        }\r\n        return (\r\n            <div >\r\n                {list.map(contact=><ListRow  key = {contact.GuID+this.props.match.params.listid} person={contact} />)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {     \r\n        // console.log(this.props.ticks)\r\n        let {error,list,loading} = this.props;\r\n        if(error) {\r\n            return <div>ERROR --- {error.message}</div>\r\n        }\r\n\r\n        if( loading && list.length === 0) {\r\n            return <WaitAnimation />\r\n        }\r\n\r\n        \r\n        return(\r\n            <div  className=\"contactsListTable\" id = 'contactsListTableML' >\r\n                 <div className = 'contactsListHead'>\r\n                    <div className = 'contactsListRow'>\r\n                        <div>Select</div>\r\n                        <div>Full Name</div>\r\n                        <div>Company Name</div>\r\n                        <div>Position</div>\r\n                        <div>Country</div>\r\n                        <div>Email</div>\r\n                    </div>\r\n                </div>\r\n                <div className = 'contactsListBody'>\r\n                    {this.makeList(list)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n} \r\nconst mapStateToProps = state => ({\r\n    list: state.MLContacts.list,\r\n    loading: state.MLContacts.loading,\r\n    error: state.MLContacts.error,\r\n    guID: state.MLContacts.guID,\r\n    ticks: state.tickContacts\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getContactsForML: (guId)=>{\r\n            dispatch(getContactsForML(guId))\r\n        },\r\n        clearTicks: () => dispatch(clearTicks()),\r\n        putID: (id) => dispatch(putID(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(List);\r\n\r\n//null , mDTP...","import myFetch from \"./fetch\"\r\n\r\nexport default (data,doAdd,ml) => {\r\n    return myFetch(`/emaillists/update?id=${ml}&flag=${doAdd}`,\"PUT\",data)\r\n}","import React,{Component} from \"react\";\r\nimport myFetch from \"../../../../tools/addOrDeleteContactsFromML\";\r\nimport {getContactsForML} from \"../../../../myRedux/actions/MLContactsActions/MLContactsFetchActions\"\r\nimport {openSendEmailPopup} from \"../../../../myRedux/actions/sendEmailPopupActions/sendEmailPopupActions\"\r\nimport {openSubmitPopup} from \"../../../../myRedux/actions/submitPopupActions/submitPopupActions\"\r\nimport {connect} from \"react-redux\";\r\nimport {IoMdRemoveCircleOutline,IoIosSend} from \"react-icons/io\";\r\n\r\nclass Menu extends Component{\r\n    deleteContactsFromML = ()=> {\r\n        myFetch(this.props.tickContacts,false,this.props.MLID)\r\n            .then(res=>{\r\n                if(res.ok) {\r\n                    this.props.getContactsForML(this.props.MLID);\r\n                }\r\n            })\r\n            .catch(error=>console.log(error))\r\n    }// sxaaaaaaaaaaaal\r\n    render(){\r\n        const isActive = this.props.tickContacts.length > 0;\r\n        return (\r\n            <div id=\"menu\">\r\n                <div className = \"buttonsContainer\">\r\n                    <button className=\"buttons\" onClick = {()=>this.props.openSubmitPopup(this.deleteContactsFromML)} disabled={!isActive}>\r\n                        <span className = \"butIcons\"><IoMdRemoveCircleOutline/></span>\r\n                        <span className = \"butName \">Delete</span>\r\n                    </button>\r\n                    <button className=\"buttons\" onClick = {()=>this.props.openSendEmailPopup(this.props.tickContacts)} disabled={!isActive}>\r\n                        <span className = \"butIcons\"><IoIosSend/></span>\r\n                        <span className = \"butName \">Send</span>\r\n                    </button> \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n        \r\n}\r\n// porcnakan menu-um\r\nconst mapStateToProps = state => {\r\n    // console.log(state.tickContacts)\r\n    return {\r\n        tickContacts: state.tickContacts.tickContacts,\r\n        MLID: state.tickContacts.MLID\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getContactsForML: (id)=>dispatch(getContactsForML(id)),\r\n    openSendEmailPopup: (guIDArr)=> dispatch(openSendEmailPopup(guIDArr)),\r\n    openSubmitPopup: f => {\r\n        dispatch(openSubmitPopup(f))\r\n    }\r\n})\r\n// after delete update, redux....\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Menu);","import React,{Component} from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\nimport VisibleLists from \"./lists\";\r\nimport List from \"./list\";\r\nimport Menu from \"./menu\"\r\nimport { connect } from 'react-redux'\r\n\r\nclass MailingList extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"mailinglist\">\r\n            \r\n                <VisibleLists /> \r\n                <div className = 'mailinglistTable'>\r\n                    <Route path='/mailinglist/:listid' component = {List} />\r\n                </div>\r\n                <Menu />\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    isOpenSendEmailPopup: state.sendEmailPopup.isOpen\r\n})\r\n\r\nexport default connect(mapStateToProps)(MailingList);\r\n\r\n//komponent@ jnjum enq, en vijak@ vor@ menak iran er petq mnuma !? ","import React,{ Component } from \"react\";\r\nimport { Route,Redirect } from \"react-router-dom\";\r\nimport ContactsList from './contacts';\r\nimport MailingList from \"./mailingList\";\r\n\r\nclass Wrapper extends Component{\r\n\r\n    render(){\r\n        return (\r\n            <div id = 'wrapper'>\r\n\r\n                <Route path = \"/contacts\" component = { ContactsList } />\r\n                <Route path = \"/mailinglist\" component={ MailingList }  />\r\n                <Route path =\"/\"  render = {props=> <Redirect to=\"contacts\" />} exact /> \r\n                \r\n            </div>\r\n        )\r\n    }\r\n        \r\n}\r\n\r\nexport default Wrapper;","const regExp = {\r\n    fullName: /^[a-z ]+$/i,\r\n    companyName: /^[a-z ]+\\w*$/i,\r\n    position: /^[a-z ]+$/i,\r\n    country: /^[a-z ]+$/i,\r\n    email: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/i,\r\n    emailListName: /^[a-z]+[\\s\\w]*$/i\r\n}\r\n\r\nconst validation = (el) => {\r\n    const name = el.target.getAttribute('name');\r\n    const value = el.target.value;\r\n    if (regExp[name].test(value)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default validation;","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { getContactsList } from '../myRedux/actions/contactsListFetchAction';\r\nimport { closePopups } from '../myRedux/actions/openPopupsAction';\r\nimport myFetch from '../tools/fetch';\r\nimport validation from '../tools/validation';\r\nimport WaitAnimation from '../reusableComponents/waitAnimation';\r\n\r\n\r\nclass AddContactPopup extends Component{\r\n    state = {\r\n        wait: false,\r\n        error: ''\r\n    }\r\n    contactData = {\r\n        FullName: '',\r\n        CompanyName: '',\r\n        Position: '',\r\n        Country: '',\r\n        Email: '',\r\n    };\r\n    validAllData = {\r\n        fullName: false,\r\n        companyName: false,\r\n        position: false,\r\n        country: false,\r\n        email: false,\r\n    };\r\n    \r\n    createContact = (el) => {\r\n        // console.log(el.target.getAttribute('name'),el.target.value );\r\n        this.contactData = {\r\n            FullName: this.fullName.value,\r\n            CompanyName: this.companyName.value,\r\n            Position: this.position.value,\r\n            Country: this.country.value,\r\n            Email: this.email.value,\r\n        };\r\n        if (validation(el)) {\r\n            this.validAllData[el.target.getAttribute('name')] = true;\r\n            el.target.nextSibling.innerHTML = '';\r\n            el.target.style.borderBottom = '2px solid green'\r\n        }else{\r\n            this.validAllData[el.target.getAttribute('name')] = false;\r\n            el.target.nextSibling.innerHTML = 'Filled incorrectly';\r\n            el.target.style.borderBottom = '2px solid #c93131'\r\n        }\r\n        // console.log(this.validAllData);\r\n    }\r\n\r\n    sendContact = () => {\r\n        \r\n        if(Object.values(this.validAllData).every(val => val)){\r\n            this.setState({wait: true, error: ''});\r\n            myFetch('/contacts', 'POST', this.contactData)\r\n            .then(res => {\r\n                // console.log(res); \r\n                if(res.status === 400){                //catch bad request\r\n                    this.setState({wait: false, error: 'Check the data and try again'});\r\n                }else{\r\n                    this.setState({wait: false, error: ''}); \r\n                    this.props.getContactsList();\r\n                    this.props.closePopups();\r\n                }\r\n                \r\n            })\r\n            .catch(error => {\r\n                this.setState({wait: false, error: 'Check the data and try again'});\r\n                console.log(error);\r\n            });\r\n            \r\n        } else {\r\n            for (let key in this.validAllData) {\r\n                // console.log(this.validAllDatay[key]);\r\n                if (!this.validAllData[key]) {\r\n                    document.getElementsByName(key)[0].nextSibling.innerHTML = 'Filled incorrectly';\r\n                    document.getElementsByName(key)[0].style.borderBottom = '2px solid #c93131'\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    cancel = () => {\r\n        this.props.closePopups();\r\n        \r\n    }\r\n\r\n    render() {\r\n                \r\n        return (\r\n            <div className = 'popupWrap'>\r\n                <div className = 'popupContent'>\r\n                    <div className = 'popupSize'>\r\n                        <div id = 'fullName' >\r\n                            <label>Full Name </label>\r\n                            <input type = 'text' ref = {el => this.fullName = el} onBlur = { this.createContact } name = 'fullName' />\r\n                            <p></p>\r\n                        </div>\r\n                        <div id = 'companyName'>\r\n                            <label>Company Name</label>\r\n                            <input type = 'text' ref = {el => this.companyName = el} onBlur = { this.createContact } name = 'companyName'/>\r\n                            <p></p>\r\n                        </div>\r\n                        <div id = 'position'>\r\n                            <label>Position</label>\r\n                            <input type = 'text' ref = {el => this.position = el} onBlur = { this.createContact } name = 'position'/>\r\n                            <p></p>\r\n                        </div>\r\n                        <div id = 'country'>\r\n                            <label>Country</label>\r\n                            <input type = 'text' ref = {el => this.country = el} onBlur = { this.createContact } name = 'country'/>\r\n                            <p></p>\r\n                        </div>\r\n                        <div id = 'email'>\r\n                            <label>Email</label>\r\n                            <input type = 'email' ref = {el => this.email = el} onBlur = { this.createContact } name = 'email'/>\r\n                            <p>{this.state.error}</p>\r\n                        </div>\r\n                        <div className = 'popupButtons'>\r\n                            <button onClick = { this.sendContact }>Add</button>\r\n                            <button onClick = { this.cancel }>Cancel</button>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    {this.state.wait? <WaitAnimation />: null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contactsList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        { \r\n            getContactsList,\r\n            closePopups\r\n        },\r\n        dispatch\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddContactPopup);\r\n// export default AddContactPopup;","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { getContactsList } from '../myRedux/actions/contactsListFetchAction';\r\nimport { closePopups } from '../myRedux/actions/openPopupsAction';\r\nimport myFetch from '../tools/fetch';\r\nimport WaitAnimation from '../reusableComponents/waitAnimation';\r\n\r\n\r\n\r\nclass DeletingPopup extends Component{\r\n    state = {\r\n        wait: false,\r\n        error: ''\r\n    }\r\n    deleteContacts = () => {\r\n        const { collectionSelected } = this.props.contacts\r\n\r\n        this.setState({wait: true}); \r\n        \r\n        myFetch('/contacts', 'DELETE', collectionSelected)\r\n        .then(res => {\r\n            // console.log(res); \r\n            this.setState({wait: false}); \r\n            this.props.getContactsList();\r\n            this.props.closePopups();\r\n        })\r\n        .catch(error => {\r\n            // console.log(error.statusText);\r\n            this.props.getContactsList();\r\n            this.setState({wait: false, error: 'Update the database and try again'});\r\n        });        \r\n    }\r\n\r\n    cancelDeleting = () => {\r\n        this.props.closePopups();\r\n        // console.log(this.props.gatherContacts.collectionContactsArr)\r\n    }\r\n    \r\n    render() {\r\n        \r\n        return (\r\n            <div className = 'popupWrap'>\r\n                <div className = 'popupContent'>\r\n                    <div className = 'popupSize'>\r\n                        <p>You want to delete the selected contacts?</p>\r\n                        <p>{this.state.error}</p>\r\n                        <div className = 'popupButtons'>\r\n                            <button onClick = { this.deleteContacts }>Ok</button>\r\n                            <button onClick = { this.cancelDeleting }>Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                    { this.state.wait? <WaitAnimation />: null }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contactsList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        { \r\n            getContactsList,\r\n            closePopups\r\n        },\r\n        dispatch\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeletingPopup);\r\n// export default AddContactPopup;","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { getContactsList } from '../myRedux/actions/contactsListFetchAction';\r\nimport { cancelEditingContactClosePopup } from '../myRedux/actions/editContactAction';\r\nimport myFetch from '../tools/fetch';\r\nimport validation from '../tools/validation';\r\nimport WaitAnimation from './waitAnimation';\r\n\r\n\r\nclass EditingContactPopup extends Component{\r\n    state = {\r\n        wait: false,\r\n        error: '',\r\n        changes: ''\r\n    }\r\n    contact = this.props.editingContactPopup.editingContact;\r\n    contactData = {\r\n        FullName: this.contact['Full Name'],\r\n        CompanyName: this.contact['Company Name'],\r\n        Position: this.contact['Position'],\r\n        Country: this.contact['Country'],\r\n        Email: this.contact['Email'],\r\n        GuID: this.contact['GuID']\r\n    };\r\n    validAllData = {\r\n        fullName: true,\r\n        companyName: true,\r\n        position: true,\r\n        country: true,\r\n        email: true,\r\n    };\r\n    \r\n    changeContact = (el) => {\r\n        // console.log(el.target.getAttribute('name'),el.target.value );\r\n        this.setState({changes: \"\"});\r\n\r\n        this.contactData = {\r\n            ...this.contactData,\r\n            FullName: this.fullName.value,\r\n            CompanyName: this.companyName.value,\r\n            Position: this.position.value,\r\n            Country: this.country.value,\r\n            Email: this.email.value,\r\n        };\r\n        if (validation(el)) {\r\n            this.validAllData[el.target.getAttribute('name')] = true;\r\n            el.target.nextSibling.innerHTML = '';\r\n            el.target.style.borderBottom = '2px solid green'\r\n        }else{\r\n            this.validAllData[el.target.getAttribute('name')] = false;\r\n            el.target.nextSibling.innerHTML = 'Filled incorrectly';\r\n            el.target.style.borderBottom = '2px solid #c93131'\r\n        }\r\n        // console.log(this.validAllData);\r\n    }\r\n\r\n    \r\n    editContact = () => {\r\n        if(\r\n            this.contactData.FullName !== this.contact['Full Name'] ||\r\n            this.contactData.CompanyName !== this.contact['Company Name'] ||\r\n            this.contactData.Position !== this.contact['Position'] ||\r\n            this.contactData.Country !== this.contact['Country'] ||\r\n            this.contactData.Email !== this.contact['Email']\r\n            ){\r\n                    if(Object.values(this.validAllData).every(val => val)){\r\n                        this.setState({wait: true});\r\n                        myFetch('/contacts', 'PUT', this.contactData)\r\n                        .then(res => {\r\n                            // console.log(res); \r\n                            if(res.status === 400){                //catch bad request\r\n                                this.setState({wait: false, error: 'Check the data and try again'});\r\n                            }else{\r\n                                this.setState({wait: false, error: ''}); \r\n                                this.props.getContactsList();\r\n                                this.props.cancelEditingContactClosePopup();\r\n                            }\r\n                            \r\n                        })\r\n                        .catch(error => {\r\n                            this.setState({wait: false, error: 'Check the data and try again'});\r\n                            console.log(error);\r\n                        });\r\n                        \r\n                    } else {\r\n                        for (let key in this.validAllData) {\r\n                            // console.log(this.validAllDatay[key]);\r\n                            if (!this.validAllData[key]) {\r\n                                document.getElementsByName(key)[0].nextSibling.innerHTML = 'Filled incorrectly';\r\n                                document.getElementsByName(key)[0].style.borderBottom = '2px solid #c93131'\r\n                            }\r\n                        }\r\n                    }\r\n            } else {\r\n                this.setState({changes: \"Didn't make a change\"});\r\n            }\r\n\r\n    }\r\n\r\n    cancel = () => {\r\n        this.props.cancelEditingContactClosePopup();\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { editingContact } = this.props.editingContactPopup;\r\n\r\n        return (\r\n            <div className = 'popupWrap'>\r\n                <div className = 'popupContent'>\r\n                    <div className = 'popupSize'>\r\n                        <div id = 'fullName' >\r\n                            <label>Full Name </label>\r\n                            <input  type = 'text' \r\n                                    defaultValue = { editingContact['Full Name'] }\r\n                                    ref = {el => this.fullName = el} \r\n                                    onBlur = { this.changeContact } \r\n                                    name = 'fullName' \r\n                                    />\r\n                            <p></p>\r\n                        </div>\r\n                        <div id = 'companyName'>\r\n                            <label>Company Name</label>\r\n                            <input  type = 'text' \r\n                                    defaultValue = { editingContact['Company Name'] }\r\n                                    ref = {el => this.companyName = el} \r\n                                    onBlur = { this.changeContact } \r\n                                    name = 'companyName'\r\n                                    />\r\n                            <p></p>\r\n                        </div>\r\n                        <div id = 'position'>\r\n                            <label>Position</label>\r\n                            <input  type = 'text' \r\n                                    defaultValue = { editingContact['Position'] }\r\n                                    ref = {el => this.position = el} \r\n                                    onBlur = { this.changeContact } \r\n                                    name = 'position'\r\n                                    />\r\n                            <p></p>\r\n                        </div>\r\n                        <div id = 'country'>\r\n                            <label>Country</label>\r\n                            <input  type = 'text' \r\n                                    defaultValue = { editingContact['Country'] }\r\n                                    ref = {el => this.country = el} \r\n                                    onBlur = { this.changeContact } \r\n                                    name = 'country'\r\n                                    />\r\n                            <p></p>\r\n                        </div>\r\n                        <div id = 'email'>\r\n                            <label>Email</label>\r\n                            <input  type = 'email' \r\n                                    defaultValue = { editingContact['Email'] }\r\n                                    ref = {el => this.email = el} \r\n                                    onBlur = { this.changeContact } \r\n                                    name = 'email'\r\n                                    />\r\n                            <p></p>\r\n                            <p>{this.state.error}{this.state.changes}</p>\r\n                        </div>\r\n                        <div className = 'popupButtons'>\r\n                            <button onClick = { this.editContact }>Save</button>\r\n                            <button onClick = { this.cancel }>Cancel</button>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    {this.state.wait? <WaitAnimation />: null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        editingContactPopup: state.editingContactPopup\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        { \r\n            getContactsList,\r\n            cancelEditingContactClosePopup\r\n        },\r\n        dispatch\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditingContactPopup);","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { cancelSelected } from '../myRedux/actions/contactsListFetchAction';\r\nimport { closePopups } from '../myRedux/actions/openPopupsAction';\r\nimport validation from '../tools/validation';\r\nimport myFetch from '../tools/fetch';\r\nimport WaitAnimation from './waitAnimation';\r\n\r\n\r\n\r\nclass CreateMailingList extends Component{\r\n    validation = false;\r\n\r\n    state = {\r\n        wait: false,\r\n        error: ''\r\n    }\r\n\r\n    createListName = (el) => {\r\n        \r\n        if (validation(el)) {\r\n            this.validation = true;\r\n            el.target.nextSibling.innerHTML = '';\r\n            this.setState({ error: ''});\r\n            el.target.style.borderBottom = '2px solid green'\r\n        }else{\r\n            this.validation = false;\r\n            el.target.nextSibling.innerHTML = 'Filled incorrectly';\r\n            el.target.style.borderBottom = '2px solid #c93131'\r\n        }\r\n        \r\n    }\r\n\r\n    createMailingList = () => {\r\n        const { collectionSelected } = this.props.contacts;\r\n        \r\n        let mailingList = {\r\n                EmailListName: this.emailListName.value,\r\n                Contacts: collectionSelected\r\n            }\r\n\r\n        if (this.validation) {\r\n            this.setState({wait: true}); \r\n        \r\n            myFetch('/emaillists', 'POST', mailingList)\r\n            .then(res => {\r\n                // console.log(res);\r\n                //catch bad request\r\n                if(res.status === 400){\r\n                    this.setState({wait: false, error: 'Check the data and try again'});\r\n                } else {        \r\n                    this.setState({wait: false, error: ''});\r\n                    this.props.cancelSelected();\r\n                    this.props.closePopups();\r\n                } \r\n            })\r\n            .catch(error => {\r\n                this.setState({wait: false, error: 'Check the data and try again'});\r\n                // console.log(error);\r\n            });\r\n        }else{\r\n            this.setState({ error: 'Check the data and try again'});\r\n        }\r\n        \r\n    }\r\n\r\n    cancelCreating = () => {\r\n        this.props.closePopups();\r\n    }\r\n    \r\n    render() {\r\n        \r\n        return (\r\n            <div className = 'popupWrap'>\r\n                <div className = 'popupContent'>\r\n                    <div className = 'popupSize'>\r\n                        <div id = 'EmailListName\":' >\r\n                            <label>Email List Name </label>\r\n                            <input type = 'text' ref = {el => this.emailListName = el} onChange = { this.createListName } name = 'emailListName' />\r\n                            <p>{ this.state.error }</p>\r\n                        </div>\r\n                        <div className = 'popupButtons'>\r\n                            <button onClick = { this.createMailingList }>Create</button>\r\n                            <button onClick = { this.cancelCreating }>Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                    { this.state.wait? <WaitAnimation />: null }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contactsList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        {  \r\n            closePopups,\r\n            cancelSelected\r\n        },\r\n        dispatch\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateMailingList);","import React from \"react\";\r\n\r\nexport default props => {\r\n    return (\r\n        <div className = {\"indicator \"+props.specClass}>\r\n            <div>\r\n                {props.text}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport {closeSubmitPopup} from \"../myRedux/actions/submitPopupActions/submitPopupActions\"\r\nimport {Link} from \"react-router-dom\"\r\nconst SubmitPopup = props => {\r\n    // console.log(props)\r\n    return    (\r\n    <div className = 'popupWrap submitPopup'>\r\n                <div className = 'popupContent'>\r\n                    <div className = 'popupSize'>\r\n                        <label>Are you sure ? </label>\r\n                        <div className = 'popupButtons'>\r\n                            {props.link ?\r\n                                <Link to = {props.link}>\r\n                                    <button onClick = { ()=>{props.callback(props.args);props.closeSubmitPopup()} }>YES</button>\r\n                                </Link>:\r\n                                <button onClick = { ()=>{props.callback(props.args);props.closeSubmitPopup()} }>YES</button>\r\n                            }\r\n                            \r\n                            <button onClick = { props.closeSubmitPopup }>Cancel</button>\r\n                        </div>                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n)}\r\n\r\nconst mapStateToProps = state => ({\r\n    callback:state.submitPopup.callback,\r\n    link: state.submitPopup.link,\r\n\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    closeSubmitPopup:()=> dispatch(closeSubmitPopup())\r\n})\r\nexport default  connect(mapStateToProps,mapDispatchToProps)(SubmitPopup)","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { closePopups } from '../myRedux/actions/openPopupsAction';\r\nimport { getMailingLists } from '../myRedux/actions/mailingListActions/mailingListFetchActions';\r\nimport { cancelSelected } from '../myRedux/actions/contactsListFetchAction';\r\nimport myFetch from '../tools/fetch';\r\nimport WaitAnimation from './waitAnimation';\r\n\r\n\r\n\r\nclass AddToExistingList extends Component{\r\n    state = {\r\n        wait: false,\r\n        error: '',\r\n        selID: -1\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getMailingLists();\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({selID: event.target.value});\r\n        this.setState({error: ''});\r\n    }\r\n\r\n    addToExistingList = () => {\r\n        const { collectionSelected } = this.props.contacts;\r\n        const { lists } = this.props.mailingLists;\r\n        let emailListName = '';\r\n        const selectID = Number(this.state.selID);\r\n\r\n        if (selectID !== -1) {\r\n            this.setState({wait: true});\r\n\r\n            lists.forEach(element => {\r\n                if (element.EmailListID === selectID) {\r\n                    emailListName = element.EmailListName;\r\n                }\r\n            });\r\n    \r\n            let emailList = {\r\n                    EmailListID: selectID,\r\n                    EmailListName: emailListName,\r\n                    Contacts: collectionSelected\r\n                }\r\n                // console.log(emailList)\r\n                myFetch('/emaillists', 'PUT', emailList)\r\n                .then(res => {\r\n                    // console.log(res);\r\n                    //catch bad request\r\n                    if(res.status === 400){\r\n                        this.setState({wait: false, error: 'Check the data and try again'});\r\n                    } else {        \r\n                        this.setState({wait: false, error: ''});\r\n                        this.props.cancelSelected();\r\n                        this.props.closePopups();\r\n                        \r\n                    } \r\n                })\r\n                .catch(error => {\r\n                    this.setState({wait: false, error: 'Check the data and try again'});\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n            this.setState({wait: false, error: 'Check the data and try again'});\r\n        }\r\n                \r\n    }\r\n\r\n    canceladdToExistingListPopup = () => {\r\n        this.props.closePopups();\r\n    }\r\n    \r\n    render() {\r\n        const { lists, loading, error } = this.props.mailingLists;\r\n\r\n        if(error) {\r\n            return <div>ERROR --- {error.message}</div>\r\n        }\r\n\r\n        if(loading) {\r\n            return <WaitAnimation />\r\n        }\r\n//         EmailListID: 1207\r\n// EmailListName: \" ertyerty\"\r\n        return (\r\n            <div className = 'popupWrap'>\r\n                <div className = 'popupContent'>\r\n                    <div className = 'popupSize'>\r\n                        <div>\r\n                            <select value={this.state.selID} onChange={this.handleChange}>\r\n                                <option value = { -1 }> Choose Mailing List </option>\r\n                                { lists.map(item => (\r\n                                        <option value = { item.EmailListID } key = {item.EmailListID}>{ item.EmailListName }</option> ) \r\n                                        )}\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                            <p>{this.state.error}</p>\r\n                        </div>\r\n                        <div className = 'popupButtons'>\r\n                            <button onClick = { this.addToExistingList }>Add</button>\r\n                            <button onClick = { this.canceladdToExistingListPopup }>Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                    { this.state.wait? <WaitAnimation />: null }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contactsList,\r\n        mailingLists: state.mailingLists\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        {  \r\n            closePopups,\r\n            getMailingLists,\r\n            cancelSelected\r\n        },\r\n        dispatch\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddToExistingList);","import myFetch from \"../../../tools/fetch\";\r\n\r\nexport const GET_TEMPLATES_BEGIN = \"GET_TEMPLATES_BEGIN\"\r\nexport const GET_TEMPLATES_SUCCESS = \"GET_TEMPLATES_SUCCESS\"\r\nexport const GET_TEMPLATES_FAIL = \"GET_TEMPLATES_FAIL\"\r\n\r\nexport const getTemplatesStart = () => ({\r\n    type: GET_TEMPLATES_BEGIN\r\n})\r\nexport const getTemplatesSuccess = templates => ({\r\n    type: GET_TEMPLATES_SUCCESS,\r\n    payload: {templates}\r\n})\r\nexport const getTemplatesFail = error => ({\r\n    type: GET_TEMPLATES_FAIL,\r\n    payload: {error}\r\n})\r\n\r\nexport const getTemplates = () => {\r\n    return dispatch => {\r\n        dispatch(getTemplatesStart());\r\n        return myFetch(\"/templates\",\"GET\")\r\n            .then(data => {\r\n                dispatch(getTemplatesSuccess(data))\r\n            })\r\n            .catch(error => dispatch(getTemplatesFail(error)));\r\n    };\r\n}","\r\nexport const OPEN_INDICATOR = \"OPEN_INDICATOR\"\r\nexport const CLOSE_INDICATOR = \"CLOSE_INDICATOR\"\r\nexport const SET_CONTENT_INDICATOR = \"SET_CONTENT_INDICATOR\"\r\n\r\nexport const openIndicator = () => ({\r\n    type: OPEN_INDICATOR\r\n})\r\nexport const closeIndicator = () => ({\r\n    type: CLOSE_INDICATOR\r\n})\r\nexport const setContentIndicator = content => ({\r\n    type: SET_CONTENT_INDICATOR,\r\n    payload: {...content}\r\n})\r\nexport const closeIndicatorAsync = (content) => dispatch => {\r\n    // return \r\n    dispatch(setContentIndicator(content))\r\n    setTimeout(()=>dispatch(closeIndicator()),2000)\r\n}","import React,{Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getTemplates} from \"../myRedux/actions/templatesActions/getTemplatesAction\";\r\nimport {closeSendEmailPopup} from \"../myRedux/actions/sendEmailPopupActions/sendEmailPopupActions\";\r\nimport {openIndicator,closeIndicatorAsync} from \"../myRedux/actions/indicatorActions/indicatorAction\"\r\nimport myFetch from \"../tools/fetch\"\r\n\r\nclass emailSendPopup extends Component {\r\n    state = {\r\n        choosedTemplate: null\r\n    } \r\n    componentDidMount() {\r\n        this.props.getTemplates();\r\n    }\r\n    makeUrl = () => {\r\n        // console.log(this.props.sendEmailPopup);\r\n        const mailingListId = this.props.sendEmailPopup.mailingListId;\r\n        const templateId = this.state.choosedTemplate\r\n        let url = \"\";\r\n        if(mailingListId) {\r\n            url = `/sendemails?template=${templateId}&emaillistId=${mailingListId}`;\r\n        } else {\r\n            url = `/sendemails?template=${templateId}`;\r\n        }\r\n        return url;\r\n    }\r\n    selectTemplate = (ev) => {\r\n        if(!ev.target.getAttribute(\"teminmp\")) {\r\n            return\r\n        }\r\n        this.setState({\r\n            choosedTemplate:ev.target.value\r\n        })\r\n    }\r\n    makeTemaplesList = list => {\r\n        // console.log(list)\r\n        return list.map(el => {\r\n            return (\r\n            <div onClick = {this.selectTemplate} key = {el.TemplateId} className = 'radio'>\r\n                <input \r\n                    name=\"temapltesRadio\"\r\n                    teminmp = \"true\"\r\n                    type=\"radio\"\r\n                    value={el.TemplateId}\r\n                    id={\"template\"+el.TemplateId}/>    \r\n                <label teminmp = \"true\" value={el.TemplateId} htmlFor ={\"template\"+el.TemplateId}>{el.TemplateName}</label>  \r\n            </div>)\r\n        })\r\n    }\r\n    send = () => {\r\n        if(!this.state.choosedTemplate){\r\n            return\r\n        }\r\n        this.props.closePopup();\r\n        this.props.openIndicator();\r\n        myFetch(this.makeUrl(),\"POST\",this.props.sendEmailPopup.GuIDArr)\r\n        .then(res=>{\r\n            // console.log(res)\r\n            if(res.ok) {\r\n                this.props.closeIndicatorAsync({text:\"OK !\",specClass:\"ok\"})\r\n            } else {\r\n                this.props.closeIndicatorAsync({text:\"Error !\",specClass:\"fail\"})\r\n\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            this.props.closeIndicatorAsync({text:\"CATCH Error !\",specClass:\"fail\"})\r\n            console.log(err)})\r\n    }\r\n    render() {\r\n        // console.log(this.props.st)\r\n        const {error,loading,templates} = this.props.templates\r\n        const {choosedTemplate} = this.state\r\n        let classes = choosedTemplate ? \"\" : \"noActive\"\r\n        if(error) {\r\n            return <div>ERROR --- {error.message}</div>\r\n        }\r\n\r\n        if( loading) {\r\n            return (\r\n            <div className = 'popupWrap senPopup'>\r\n                <div className = 'popupContent'>\r\n                    <div className = 'popupSize'> \r\n                        <div>LOADING ...</div>\r\n                    </div>\r\n                </div>\r\n             </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className = 'popupWrap senPopup'>\r\n                <div className = 'popupContent'>\r\n                    <div className = 'popupSize'>\r\n                        <div id = 'radioWrapper'>\r\n                            <div>    \r\n                                {this.makeTemaplesList(templates)} \r\n                            </div>   \r\n                        </div>     \r\n                        <div className = 'popupButtons'>     \r\n                            <button onClick = {this.send} className = {\"sendB \"+classes}>send</button>                   \r\n                            <button onClick = {this.props.closePopup} className = {classes}>Close</button>\r\n                            {/* <button onClick = { this.sendContact }>Add</button>\r\n                            <button onClick = { this.cancel }>Cancel</button> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            // <div id = \"emailSendPopup\" className = \"popup\">\r\n            //     {makeTemaplesList(props.temaplesList)}\r\n            // </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        st: state,\r\n        sendEmailPopup:state.sendEmailPopup,\r\n        templates: state.templates\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        closePopup: () => {\r\n            dispatch(closeSendEmailPopup())\r\n        },\r\n        getTemplates:()=>{\r\n            dispatch(getTemplates())\r\n        },\r\n        openIndicator: ()=>{\r\n            dispatch(openIndicator())\r\n        },\r\n        closeIndicatorAsync: (content) => {\r\n            dispatch(closeIndicatorAsync(content))\r\n        }\r\n        \r\n}\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(emailSendPopup);\r\n\r\n// zamikaniya classov OKa ?\r\n","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { getContactsList } from '../myRedux/actions/contactsListFetchAction';\r\nimport { closePopups } from '../myRedux/actions/openPopupsAction';\r\nimport WaitAnimation from '../reusableComponents/waitAnimation';\r\n\r\n\r\nclass UploadFilePopup extends Component{\r\n    state = {\r\n        cancel: false,\r\n        wait: false,\r\n        error: '',\r\n        file: null\r\n    }\r\n   \r\n    cancel = () => {\r\n        this.props.closePopups()\r\n        \r\n    }\r\n\r\n    onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.fileUpload(this.state.file).then((response)=>{\r\n            // console.log(response);\r\n          })\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({file: e.target.files[0]});\r\n        console.log(e.target.files[0]);\r\n    }\r\n\r\n    fileUpload = (file) => {\r\n        console.log(file);\r\n        const URL = \"http://visual.istclabz.com:2112/api/contacts/upload\";\r\n        const method = 'POST';\r\n        const formData = new FormData();\r\n\r\n        formData.append('data', file);\r\n        console.log(formData);\r\n        return fetch(URL,{\r\n            method,\r\n            headers: {\r\n                'Content-type': 'multipart/form-data',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: formData\r\n        })\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className = 'popupWrap'>\r\n                <div className = 'popupContent'>\r\n                    <div className = 'popupSize'>\r\n                        {/* <form name=\"form1\" method=\"post\" encType = \"multipart/form-data\" action=\"http://visual.istclabz.com:2112/api/contacts/upload\">\r\n                            <div>\r\n                                <label htmlFor=\"datafile\">Data File</label>\r\n                                <input name=\"datafile\" type=\"file\" />\r\n                            </div>\r\n                            <div className = 'popupButtons'>\r\n                                <button type = 'submit'>Add</button>\r\n                                <button onClick = { this.cancel }>Cancel</button>\r\n                            </div>\r\n                        </form>                         */}\r\n                        <form name=\"form1\" onSubmit={this.onFormSubmit}>\r\n                            <div>\r\n                                <label htmlFor=\"datafile\">Data File</label>\r\n                                <input name=\"datafile\" type=\"file\" onChange={this.onChange} id = 'file'/>\r\n                            </div>\r\n                            <div className = 'popupButtons'>\r\n                                <button type = 'submit'>Add</button>\r\n                                <button type = 'button' onClick = { this.cancel }>Cancel</button>\r\n                            </div>\r\n                        </form>                       \r\n                    </div>\r\n                    {this.state.wait? <WaitAnimation />: null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contactsList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(\r\n        { \r\n            getContactsList,\r\n            closePopups\r\n        },\r\n        dispatch\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadFilePopup);\r\n\r\n\r\n\r\n// this.setState({file: e.target.files[0]});\r\n//         console.log(e.target.files);\r\n//         var reader = new FileReader();\r\n\r\n//         reader.onload = e => {\r\n//             const data = e.target.result;\r\n//             let workbook = XLSX.read(data,{type:\"binary\"});\r\n\r\n//             const wsname = workbook.SheetNames[0];\r\n//             const ws = workbook.Sheets[wsname];\r\n\r\n//             const dataRes = XLSX.utils.sheet_to_csv(ws,{header:1});\r\n//             console.log(dataRes)","import React,{Component} from \"react\";\r\nimport Menu from \"./menu\";\r\nimport Wrapper from \"./wrapper\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport '../styles/index.sass';\r\nimport logo from '../styles/images/logo32.png';\r\nimport AddContactPopup from '../reusableComponents/AddContactPopup';\r\nimport DeletingPopup from '../reusableComponents/DeletingPopup';\r\nimport { connect } from 'react-redux';\r\nimport EditingContactPopup from '../reusableComponents/EditingContactPopup';\r\nimport CreateMailingList from '../reusableComponents/CreateMailingList';\r\nimport Indicator from \"../reusableComponents/indicator\";\r\nimport SubmitPopup from \"../reusableComponents/SubmitPopup\"\r\nimport AddToExistingList from \"../reusableComponents/AddToExistingListPopup\";\r\nimport EmailSendPopup from '../reusableComponents/emailSendPopup';\r\nimport UploadFilePopup from '../reusableComponents/UploadFilePopup';\r\n\r\nclass App extends Component{\r\n    render(){\r\n        const { creatingEmailListPopupIsOpen, \r\n                addToExistingListIsOpen,\r\n                addNewContactIsOpen,\r\n                uploadFileIsOpen, \r\n                deletingPopupIsOpen\r\n                } = this.props.openPopups;\r\n        const { editPopupIsOpen } = this.props.editingContactPopup;\r\n        // const {bgColor,isOpen,text} = this.props.indicator;\r\n        const {isOpen} = this.props.submitPopup\r\n        const {specClass,text} = this.props.indicator;\r\n        const isOpenIndicator = this.props.indicator.isOpen\r\n        const {isOpenSendEmailPopup} = this.props;\r\n        return (\r\n            <Router>\r\n                <div className=\"main\">\r\n                    <div className=\"header\">\r\n                        <div className = 'size'>\r\n                            <div id = 'logo'>\r\n                                <Link to=\"/contacts\">\r\n                                    <img src = {logo} alt = 'logo'/>\r\n                                </Link>\r\n                            </div>\r\n                            <h1>C<span>ustomer</span> R<span>elationship</span> M<span>anagement</span></h1>\r\n                        </div>\r\n                    </div>\r\n                    <section>\r\n                        <Menu />\r\n                        <div id = 'container'>\r\n                            <Wrapper />  \r\n                        </div>\r\n                    </section>\r\n                </div>\r\n                { addNewContactIsOpen ? < AddContactPopup />: null }\r\n                { uploadFileIsOpen ? < UploadFilePopup />: null }\r\n                { creatingEmailListPopupIsOpen ? < CreateMailingList />: null}\r\n                { addToExistingListIsOpen ? < AddToExistingList />: null}\r\n                { deletingPopupIsOpen ? < DeletingPopup />: null }\r\n                { editPopupIsOpen ? < EditingContactPopup />: null}\r\n                { isOpen ? <SubmitPopup /> : null }\r\n                { isOpenIndicator ?<Indicator specClass = {specClass} text = {text}/> : null}\r\n                { isOpenSendEmailPopup ? <EmailSendPopup/> : null }\r\n            \r\n            </Router>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        openPopups: state.openPopups,\r\n        editingContactPopup: state.editingContactPopup,\r\n        indicator: state.indicator,\r\n        submitPopup: state.submitPopup,\r\n        isOpenSendEmailPopup: state.sendEmailPopup.isOpen\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(App);","import {\r\n    OPEN_SEND_EMAIL_POPUP,\r\n    CLOSE_SEND_EMAIL_POPUP\r\n} from \"../actions/sendEmailPopupActions/sendEmailPopupActions\"\r\n\r\nconst initState = {\r\n  isOpen:false,\r\n  GuIDArr:null,\r\n  mailingListId:null\r\n};\r\n\r\nexport default function sendEmailPopupReducer(state = initState,action) {    \r\n    // console.log(action);\r\n    switch(action.type) {\r\n        case OPEN_SEND_EMAIL_POPUP:\r\n        const {GuIDArr,mailingListId} = action.payload\r\n          return {\r\n            isOpen:true,\r\n            GuIDArr,\r\n            mailingListId\r\n        };\r\n    \r\n        case CLOSE_SEND_EMAIL_POPUP:\r\n        // console.log(\"CLOSE action\");\r\n          return {\r\n            isOpen:false,\r\n            GuIDArr:null,\r\n            mailingListId:null\r\n          };\r\n        default:\r\n          return state;\r\n      }\r\n}\r\n\r\n","import {\r\n    GET_CONTACTS_LIST_BEGIN,\r\n    GET_CONTACTS_LIST_SUCCESS,\r\n    GET_CONTACTS_LIST_FAIL,\r\n    ADD_SELECTED_CONTACTS_ACTIVATION_BUTTONS,\r\n    SELECT_ALL,\r\n    CANCEL_SELECTED\r\n} from \"../actions/contactsListFetchAction\"\r\n\r\nconst initState = {\r\n    lists: [],\r\n    loading: false,\r\n    error: null,\r\n    selectedContacts: {},\r\n    collectionSelected: [],\r\n    selectAll: false,\r\n    buttonsNotActive: true,\r\n};\r\n\r\nexport default function contactsListReducer(state = initState, action) {\r\n    let guIds = {};\r\n    let collectionSel = [];\r\n    let selectAllCopy = false;\r\n    let buttonsNotActiveCopy = false;\r\n  \r\n    switch(action.type) {\r\n\r\n        case GET_CONTACTS_LIST_BEGIN:\r\n          return {\r\n            ...state,\r\n            loading: true,\r\n            error: null\r\n          };\r\n\r\n    \r\n        case GET_CONTACTS_LIST_SUCCESS:\r\n          if (action.payload.lists.length === 0) {\r\n            selectAllCopy = false;\r\n          } else {\r\n            selectAllCopy = true;\r\n            action.payload.lists.forEach(element => {\r\n              if(state.selectedContacts[element.GuID]){\r\n                guIds[element.GuID] = true;\r\n                collectionSel.push(element.GuID);\r\n              }else{\r\n                guIds[element.GuID] = false;\r\n                selectAllCopy = false;\r\n              }\r\n            });\r\n          }\r\n          \r\n          // console.log(guIds);\r\n          if (collectionSel.length !== 0) {\r\n            buttonsNotActiveCopy = false;\r\n          }else{\r\n            buttonsNotActiveCopy = true;\r\n          }\r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            lists: action.payload.lists,\r\n            selectedContacts: guIds,\r\n            collectionSelected: collectionSel,\r\n            selectAll: selectAllCopy,\r\n            buttonsNotActive: buttonsNotActiveCopy\r\n          }\r\n          \r\n    \r\n        case GET_CONTACTS_LIST_FAIL:\r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            lists: []\r\n          };\r\n\r\n\r\n        case ADD_SELECTED_CONTACTS_ACTIVATION_BUTTONS:\r\n          let selectedCon = {...state.selectedContacts};\r\n          selectAllCopy = false;\r\n          \r\n          if (selectedCon[action.guId]) {\r\n            selectedCon[action.guId] = false;\r\n          }else{\r\n            selectedCon[action.guId] = true;\r\n          }\r\n          for (const key in selectedCon) {\r\n            if (selectedCon[key]) {\r\n              collectionSel.push(key); \r\n            }\r\n          }\r\n          \r\n          if (collectionSel.length !== 0) {\r\n            buttonsNotActiveCopy = false;\r\n          }else{\r\n            buttonsNotActiveCopy = true;\r\n          }\r\n          if (Object.values(selectedCon).every(item => item)) {\r\n            selectAllCopy = true;\r\n          }else{\r\n            selectAllCopy = false;\r\n          }\r\n          return {\r\n            ...state,\r\n            selectedContacts: selectedCon,\r\n            collectionSelected: collectionSel,\r\n            selectAll: selectAllCopy,\r\n            buttonsNotActive: buttonsNotActiveCopy\r\n          }\r\n\r\n          \r\n        case SELECT_ALL:\r\n            selectedCon = {...state.selectedContacts};\r\n            // selectAllCopy = !state.selectAll;\r\n\r\n            if (Object.keys(selectedCon).length === 0) {\r\n              selectAllCopy = false;\r\n            } else {\r\n              selectAllCopy = !state.selectAll;\r\n              for (let key in selectedCon) {\r\n                selectedCon[key] = selectAllCopy;\r\n                collectionSel.push(key);\r\n              }\r\n            }\r\n\r\n            \r\n            \r\n            // console.log(selectedCon);\r\n            return {\r\n              ...state,\r\n              selectedContacts: selectedCon,\r\n              collectionSelected: collectionSel,\r\n              selectAll: selectAllCopy,\r\n              buttonsNotActive: !selectAllCopy\r\n            }\r\n\r\n\r\n        case CANCEL_SELECTED:\r\n          selectedCon = {...state.selectedContacts};\r\n\r\n          for (let key in selectedCon) {\r\n            selectedCon[key] = false;\r\n          }\r\n          return {\r\n            ...state,\r\n            selectedContacts: selectedCon,\r\n            collectionSelected: [],\r\n            selectAll: false,\r\n            buttonsNotActive: true\r\n          }\r\n    \r\n        default:\r\n          return state;\r\n      }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// case ADD_CONTACTS_GUID:\r\n// return {\r\n//     ...state,\r\n//     selectedContacts: action.guIds\r\n// };","import {\r\n    GET_MAILLING_LISTS_BEGIN,\r\n    GET_MAILLING_LISTS_SUCCESS,\r\n    GET_MAILLING_LISTS_FAIL\r\n} from \"../actions/mailingListActions/mailingListFetchActions\"\r\n\r\nconst initState = {\r\n    lists: [],\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\nexport default function mailingListsReducer(state = initState,action) {\r\n    switch(action.type) {\r\n        case GET_MAILLING_LISTS_BEGIN:\r\n          return {\r\n            ...state,\r\n            loading:true,\r\n            error: null\r\n          };\r\n    \r\n        case GET_MAILLING_LISTS_SUCCESS:\r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            lists: action.payload.lists\r\n          };\r\n    \r\n        case GET_MAILLING_LISTS_FAIL:\r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            lists: []\r\n          };\r\n    \r\n        default:\r\n          return state;\r\n      }\r\n}","import {\r\n    OPEN_CREATING_EMAIL_LIST_POPUP,\r\n    OPEN_ADD_TO_EXISTING_LIST_POPUP,\r\n    OPEN_ADD_NEW_CONTACT_POPUP,\r\n    OPEN_UPLOAD_FILE_POPUP,\r\n    OPEN_DELETING_POPUP,\r\n    CLOSE_POPUPS\r\n} from '../actions/openPopupsAction';\r\n\r\nconst initState = {\r\n    creatingEmailListPopupIsOpen: false,\r\n    addToExistingListIsOpen: false,\r\n    addNewContactIsOpen: false,\r\n    uploadFileIsOpen: false,\r\n    deletingPopupIsOpen: false\r\n};\r\n\r\n\r\nexport default function openPopupsReducer(state = initState, action) {\r\n    // console.log(action);\r\n    \r\n    switch (action.type) {\r\n\r\n        case OPEN_CREATING_EMAIL_LIST_POPUP:\r\n            return {\r\n                ...state,\r\n                creatingEmailListPopupIsOpen: true,\r\n            };\r\n\r\n        case OPEN_ADD_TO_EXISTING_LIST_POPUP:\r\n            return {\r\n                ...state,\r\n                addToExistingListIsOpen: true\r\n            };\r\n\r\n        case OPEN_ADD_NEW_CONTACT_POPUP:\r\n            return {\r\n                ...state,\r\n                addNewContactIsOpen: true\r\n            };\r\n\r\n        case OPEN_UPLOAD_FILE_POPUP:\r\n            return {\r\n                ...state,\r\n                uploadFileIsOpen: true\r\n            };\r\n\r\n        case OPEN_DELETING_POPUP:\r\n            return {\r\n                ...state,\r\n                deletingPopupIsOpen: true\r\n            };\r\n            \r\n        case CLOSE_POPUPS:\r\n            return {\r\n                creatingEmailListPopupIsOpen: false,\r\n                addToExistingListIsOpen: false,\r\n                addNewContactIsOpen: false,\r\n                uploadFileIsOpen: false,\r\n                deletingPopupIsOpen: false\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}","import {\r\n    GET_TEMPLATES_BEGIN,\r\n    GET_TEMPLATES_SUCCESS,\r\n    GET_TEMPLATES_FAIL\r\n} from \"../actions/templatesActions/getTemplatesAction\"\r\n\r\nconst initState = {\r\n    templates: [],\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\nexport default function templatesReducer(state = initState,action) {\r\n  // console.log(action.type + \" ! ! ! ! !\")\r\n\r\n    switch(action.type) {\r\n        case GET_TEMPLATES_BEGIN:\r\n          return {\r\n            ...state,\r\n            loading: true,\r\n            error: null\r\n          };\r\n    \r\n        case GET_TEMPLATES_SUCCESS:\r\n        // console.log(\"SUCYAS\")\r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            templates: action.payload.templates\r\n          };\r\n    \r\n        case GET_TEMPLATES_FAIL:\r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            templates: []\r\n          };\r\n    \r\n        default:\r\n          return state;\r\n      }\r\n}","import {\r\n    ADD_EDITING_CONTACT_OPEN_POPUP,\r\n    CANCEL_EDITING_CONTACT_CLOSE_POPUP\r\n} from '../actions/editContactAction';\r\n\r\nconst initState = {\r\n    editingContact: {},\r\n    editPopupIsOpen: false\r\n};\r\n\r\nexport default function editingContactPopupReducer(state = initState, action) {\r\n    // console.log(action);\r\n    \r\n    switch (action.type) {\r\n        case ADD_EDITING_CONTACT_OPEN_POPUP:\r\n            return {\r\n                editingContact: action.contact,\r\n                editPopupIsOpen: true\r\n            }\r\n\r\n        case CANCEL_EDITING_CONTACT_CLOSE_POPUP:\r\n            return {\r\n                editingContact: {},\r\n                editPopupIsOpen: false\r\n            };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n    \r\n}","import {\r\n    TICK_CONTACT,\r\n    CLEAR_TICKS,\r\n    PUT_ID\r\n} from \"../actions/tickActions/tickContactsML\"\r\n\r\nconst initialState = {\r\n    tickContacts:[],\r\n    MLID:null\r\n}\r\nexport default function tickContactsReducer(state = initialState,action) {\r\n    let copyArr = state.tickContacts.slice();\r\n    switch(action.type) {\r\n        case TICK_CONTACT:\r\n            const i = copyArr.indexOf(action.payload.id);\r\n            if(i > -1) {\r\n                copyArr.splice(i,1);\r\n            } else {\r\n                copyArr.push(action.payload.id)\r\n            }\r\n            return {\r\n                ...state,\r\n                tickContacts:copyArr\r\n            }\r\n        case CLEAR_TICKS:\r\n            return {\r\n                tickContacts:[],\r\n                MLID:null\r\n            }\r\n        case PUT_ID:\r\n            return {\r\n                ...state,\r\n                MLID:action.payload.name\r\n            }\r\n            \r\n        default:\r\n          return state;\r\n      }\r\n}\r\n// export default function mailingListsReducer(state = initState,action) {\r\n//     switch(action.type) {\r\n//         case GET_MAILLING_LISTS_BEGIN:\r\n//           return {\r\n//             ...state,\r\n//             loading:true,\r\n//             error: null\r\n//           };","import {\r\n    GET_CONTACTS_FOR_ML,\r\n    GET_CONTACTS_FOR_ML_SUCCESS,\r\n    GET_CONTACTS_FOR_ML_FAIL,\r\n    PUT_ML_GUID\r\n} from \"../actions/MLContactsActions/MLContactsFetchActions\"\r\n\r\nconst initState = {\r\n    list: [],\r\n    loading: false,\r\n    error: null,\r\n    guID:null\r\n};\r\n\r\nexport default function MLContactsReducer(state = initState,action) {\r\n    switch(action.type) {\r\n        case GET_CONTACTS_FOR_ML:\r\n          return {\r\n            ...state,\r\n            loading:true,\r\n            error: null\r\n          };\r\n    \r\n        case GET_CONTACTS_FOR_ML_SUCCESS:\r\n      //  console.log(action.payload)\r\n\r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            list: action.payload.list.Contacts\r\n          };\r\n    \r\n        case GET_CONTACTS_FOR_ML_FAIL:\r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            list: []\r\n          };\r\n        case PUT_ML_GUID:\r\n          return {\r\n              ...state,\r\n              guID: action.payload.guID\r\n          }\r\n        default:\r\n          return state;\r\n      }\r\n}","import {\r\n    OPEN_INDICATOR,\r\n    CLOSE_INDICATOR,\r\n    SET_CONTENT_INDICATOR\r\n} from \"../actions/indicatorActions/indicatorAction\"\r\n\r\nconst initState = {\r\n    specClass: \"wait\",\r\n    text: \"Wait ...\",\r\n    isOpen: false\r\n};\r\n\r\nexport default function indicatorReducer(state = initState,action) {\r\n    switch(action.type) {\r\n        case OPEN_INDICATOR:\r\n          return {\r\n            ...state,\r\n            specClass: \"wait\",\r\n            isOpen: true\r\n          };\r\n    \r\n        case CLOSE_INDICATOR:\r\n          return {\r\n            specClass: 'wait',\r\n            text: \"Wait ...\",\r\n            isOpen: false\r\n        };\r\n    \r\n        case SET_CONTENT_INDICATOR:\r\n          return {\r\n            ...state,\r\n            text: action.payload.text,\r\n            specClass: action.payload.specClass\r\n          };\r\n    \r\n        default:\r\n          return state;\r\n      }\r\n}","import {\r\n    OPEN_SUBMIT_POPUP,\r\n    CLOSE_SUBMIT_POPUP\r\n} from \"../actions/submitPopupActions/submitPopupActions\"\r\n\r\nconst initState = {\r\n  isOpen:false,\r\n  callback:null,\r\n  link: null\r\n};\r\n\r\nexport default function submitPopupReducer(state = initState,action) {    \r\n    // console.log(action);\r\n    switch(action.type) {\r\n        case OPEN_SUBMIT_POPUP:\r\n          return {\r\n            isOpen:true,\r\n            callback:action.payload.callback,\r\n            link: action.payload.link\r\n        };\r\n    \r\n        case CLOSE_SUBMIT_POPUP:\r\n          // console.log(\"CLOSE\")\r\n          return {\r\n            isOpen:false,\r\n            callback:null,\r\n            link: null\r\n          }\r\n        default:\r\n          return state;\r\n      }\r\n}\r\n\r\n","import sendEmailPopup from \"./sendEmailPopupReducer\";\r\nimport contactsList from './contactsListReduser';\r\nimport mailingLists from \"./mailingListsReducer\";\r\nimport openPopups from './openPopupsReduser';\r\nimport templates from \"./templatesReducer\";\r\nimport updatingContactPopup from \"./editContactReducer\";\r\nimport tickContacts from \"./tickContactsReducer\";\r\nimport MLContacts from  \"./MLContactsReducer\";\r\nimport editingContactPopup from \"./editContactReducer\";\r\nimport indicator from \"./indicatorReducer\";\r\nimport submitPopup from \"./submitPopupReducer\"\r\nimport { combineReducers } from \"redux\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    mailingLists,\r\n    sendEmailPopup,\r\n    contactsList,\r\n    openPopups,\r\n    templates,\r\n    updatingContactPopup,\r\n    tickContacts,\r\n    MLContacts,\r\n    editingContactPopup,\r\n    indicator,\r\n    submitPopup\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Index from \"./components\";\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport rootReduser from './myRedux/redusers/rootReduser';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(rootReduser,applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n    <Provider store = { store }>\r\n        <Index />\r\n    </Provider>\r\n, document.getElementById('root'));\r\n"],"sourceRoot":""}